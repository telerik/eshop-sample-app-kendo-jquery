@using Microsoft.AspNetCore.Html
@using Newtonsoft.Json


@{
    ViewData["Title"] = "ProductCatalog";    
    var result = Html.Raw(Json.Serialize(Model.Parameters));  
}

@model Models.ViewModels.ReportSourceModel

	<script src="~/api/reports/resources/js/telerikReportViewer-16.2.22.1109.min.js/"></script>


	<style>
		#reportViewer1 {	
			font-family: Verdana, Arial;
		}

        #container, #reportViewer1, .trv-report-viewer{
            height: 1078px;
            width: 980px;
            margin: 20px auto 100px auto !important;
        }  

        .order-link{
            font-weight: 600;
            font-size: 14px;
            line-height: 20px;
            color: #0078D4;
            margin-left: 10%;
        }
	</style>    

    <div id="container">      
        <a class="order-link" visibility="hidden" href="javascript:history.back()"><span class="k-icon k-i-chevron-left"></span>Back To Order</a>
        <div id="reportViewer1">
            loading...
       </div>
    </div>

    <script type="text/javascript">
        $(document).ready(function () { 
            
            if(window.location.href.includes("Invoice")){
                $('.order-link').css('visibility', 'visible');
            }else{
                $('.order-link').css('visibility', 'hidden');
            }
       
            $("#reportViewer1")
                .telerik_ReportViewer({

                    // The URL of the service which will serve reports.
                    // The URL corresponds to the name of the controller class (ReportsController).
                    // For more information on how to configure the service please check http://www.telerik.com/help/reporting/telerik-reporting-rest-conception.html.
					//serviceUrl: "/api/reports",
                    serviceUrl: '@Context.Request.PathBase.Value/api/reports',

                    // The URL for custom report viewer template. The template can be edited -
                    // new functionalities can be added and unneeded ones can be removed.
                    // For more information please check http://www.telerik.com/help/reporting/html5-report-viewer-templates.html.
                    //templateUrl: '/Views/Shared/telerikReportViewerTemplate-16.2.22.1109.html',

                    //ReportSource - report description
                    reportSource: {
                        // The report can be set to a report file name (trdx report definition) 
                        // or CLR type name (report class definition).
                        report: '@Model.ReportId',
                        parameters: @result
                    },
                   
                    // Specifies whether the viewer is in interactive or print preview mode.
                    // PRINT_PREVIEW - Displays the paginated report as if it is printed on paper. Interactivity is not enabled.
                    // INTERACTIVE - Displays the report in its original width and height without paging. Additionally interactivity is enabled.
                    viewMode: telerikReportViewer.ViewModes.INTERACTIVE,

                    // Sets the scale mode of the viewer.
                    // Three modes exist currently:
                    // FIT_PAGE - The whole report will fit on the page (will zoom in or out), regardless of its width and height.
                    // FIT_PAGE_WIDTH - The report will be zoomed in or out so that the width of the screen and the width of the report match.
                    // SPECIFIC - Uses the scale to zoom in and out the report.
                    scaleMode: telerikReportViewer.ScaleModes.FIT_PAGE_WIDTH,

                    // Zoom in and out the report using the scale
                    // 1.0 is equal to 100%, i.e. the original size of the report
                    scale: 0.6,
					enableAccessibility: false,
                    search: true,
                    sendEmail: { enabled: true }
                });
        });
    </script>