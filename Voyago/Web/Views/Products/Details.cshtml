@{
	ViewData["Title"] = "Product Details";
}
@model Models.ViewModels.ProductAllViewModel;

<div class="details-container">
	<nav id="breadcrumb" name="breadcrumb"></nav>	
	<div class="model-details">
		<div class="model-image">
			<img width="453" height="453" src="@Url.Action("GetProductLargePhotoById", "Products")?photoId=@Model.PhotoId">			
		</div>
		<div class="model-info">
			<div class="info-top">
				<h1 class="details-heading">
					@{
						if (Model.Model == null)
						{
							@Model.Name
						}
						else
						{
							@Model.Model
						}
					}
				</h1>
				<input id="productRating" name="productRating" style="color: #0078D4;" type="text" value="0" />				
				<hr class="splitter1">
			</div>
			<div class="info-bottom">
				<div class="bottom-left">
					<div class="info-row" style="gap:53px;">
						<p class="info-title">Product Name</p>
						<p class="info-value">@Model.Name</p>
					</div>
					<div class="info-row" style="gap:76px;">
						<p class="info-title">Product No</p>
						<p>@Model.ProductNumber</p>
					</div>
					<div class="info-row" style="gap:130px;">
						<p class="info-title">Size</p>
						@{
							if (Model.Size != null)
							{
								<input id="sizePicker" name="sizePicker" type="text" />								
							}
						}
					</div>
					<div class="info-row" style="gap:109px;">
						<p class="info-title">Weight</p>
						<p>@Model.Weight</p>
					</div>
					<div class="info-row" style="gap:121px;">
						<p class="info-title">Color</p>
						<ul id="colorPicker"></ul>
					</div>
					<div class="info-row" style="gap:75px;">
						<p class="info-title">Description</p>
						<p style="width:400px;">@Model.Description</p>
					</div>
				</div>
				<div class="bottom-right">
					@{
						if (Model.DiscountPct > 0)
						{							
							<label class="list-price"></label>
							<label id="discount" class="discount"></label>
							<label id="final-price" class="price"></label>
						}
						else
						{						
							<label class="price"></label>
						}
					}
					<div class="product-buttons">		
						<button class="cart-button add-to-cart" id="addToCartButton_@Model.Id" type="button">Add to cart</button>
						<button class="favorites-button add-to-favourites" id="addToFavoritesButton_@Model.Id" type="button">Add to Favorites</button>						
					</div>
				</div>
			</div>
		</div>
	</div>

	<hr class="splitter2">

	@{
		if (Model.ModelId != null)
		{
			<div>
				<h4 class="similar-products">Similar Products</h4>
				<div id="similarProductsListView" name="similarProductsListView"></div>				
			</div>
		}
	}
</div>

<script type="text/html" id="product-template">
	@await Html.PartialAsync("_TileProductCard.cshtml")
</script>

<script>
	$(document).ready(function () {
		var productId = "@Model.Id";
		var modelId = "@Model.ModelId";
		var discount = "@Model.DiscountPct";
		var price = "@Model.Price"
		var finalPrice = "@Model.FinalPrice"
		
		$('.price').text(kendo.toString(Number(price), 'c'))
		$('.list-price').text(kendo.toString(Number(price), 'c'))
		$('#discount').text(kendo.toString(Number(discount * 100), 'p0'))
		$('#final-price').text(kendo.toString(Number(finalPrice), 'c2'))

		$.get("/Products/GetAvailableColors?productId=" + productId, function (data) {
			$("#colorPicker").kendoRadioGroup({
				items: data,

				layout: "horizontal",
				value: "@Model.Color",
				change: function () { selectAlternateProductVersion(modelId); }
			});
		});		

		$("#breadcrumb").kendoBreadcrumb({
			"items": [{
			    "href": "/Home/Index",
			    "icon": "home",
			    "showIcon": true,
			    "showText": false,
			    "type": "rootItem"
			}, {
			    "href": "/Home/@Model.ProductCategoryName",
			    "text": "@Model.ProductCategoryName",
			    "showText": true,
			    "type": "item"
			}, {
			    "href": "/Products/Category?subCategory=@Model.SubCategory&subCategoryId=@Model.SubCategoryId&count=4",
			    "text": "@Model.SubCategory",
			    "showText": true,
			    "type": "item"
			},{
				"href": "/Products/Details?productId=@Model.Name",
				"text": "@Model.Name",
				"showText": true,
				"type": "item"
			}],
			"navigational": true
		});
		

		 $("#productRating").kendoRating({
		    "min": 1,
		    "max": 5,
		    "precision": "half",
		    "label": false,
		    "readonly": true,
		    "value": '@Model.AverageRating'
		});

		$("#sizePicker").kendoDropDownList({
			"change": function() {
			    selectAlternateProductVersion(@Model.ModelId);
			},
			"value": "@Model.Size",
			"rounded": "none",
			"fillMode": "none",
			"dataSource": {
			    "transport": {
			        "read": {
			            "url": "/Products/GetAvailableSizes?productId=@Model.Id"
			        }
			    }
			}
		});		

		var dataSource = new kendo.data.DataSource({
			  transport: {	   
			    read: {
			      url: "/Products/ReadSimilarProducts?productId=@Model.Id&count=4",
			      dataType: "json" 
			    }
			  }
			});

			//dataSource.fetch(function() {
							
				$("#similarProductsListView").kendoListView({
			        "tagName": "div",				
			        "dataSource": dataSource,
					"dataBound": onSimilarDataBound,
			        "template": kendo.template($('#product-template').html())
			    });    
			//});
	});
</script>

<style>
	.details-container {
		width: 1440px;
		margin: auto;
	}

	.splitter1 {
		border-top: 2px solid #bbb;
	}

	.splitter2 {
		margin-top: 80px;
		margin-bottom: 80px;
		border-top: 2px solid #bbb;
	}

	.model-details {
		display: flex;
		flex-direction: row;
	}

	.model-info {
		display: flex;
		flex-direction: column;
		margin-left: 40px;
	}

	.info-bottom {
		display: flex;
		flex-direction: row;
	}

	.bottom-left {
		width: 650px;
		display: flex;
		gap: 8px;
		flex-direction: column;
	}

	.info-row {
		display: flex;
		flex-direction: row;
	}

	.bottom-right {
		display: flex;
		flex-direction: column;
	}

	.info-text {
		display: flex;
		flex-direction: column;
	}

	.similar-products {
		font-weight: 500;
		font-size: 26px;
		line-height: 46px;
		letter-spacing: -0.9px;
		color: #000000;
		margin-left: 20px;
	}

	.k-listview-content {
		display: flex;
		flex-direction: row;
		justify-content: left;
		border: none;
	}

	.large-image {
		width: 453px;
		height: 453px;
	}

	#breadcrumb {
		margin-top: 35px;
		margin-bottom: 58px;
	}

	.details-heading {
		font-weight: 500;
		font-size: 40px;
		line-height: 58px;
		letter-spacing: -0.9px;
	}

	.splitter {
		border: 1px solid #E5E5E5;
	}

	.info-text {
		width: 300px;
	}

	.info-title {
		font-weight: 600;
		font-size: 16px;
		line-height: 24px;
	}

	.info-value {
		font-weight: 400;
		font-size: 16px;
		line-height: 24px;
		color: #1D252C;
	}

	.k-picker {
		width: 174px;
	}

	.k-input-value-text {
		font-size: 16px;
	}

	.k-radio.k-checked, .k-radio:checked {
		background-color: #0078D4 !important;
		border: 1px solid !important;
		border-color: #0078D4 !important;
	}

	.list-price {
		font-weight: 500;
		text-align: right;
		font-size: 40px;
		line-height: 58px;
		letter-spacing: -0.9px;
		color: indianred;
		margin-bottom: 5px;
		text-decoration: line-through;
	}
	.discount {
		font-weight: 500;
		text-align: right;
		font-size: 22px;
		letter-spacing: -0.9px;
		margin-bottom: 5px;
	}
	.price {
		font-weight: 500;
		text-align: right;
		font-size: 40px;
		line-height: 58px;
		letter-spacing: -0.9px;
		color: #0078D4;
		margin-bottom: 22px;
	}

	.product-buttons {
		display: flex;
		flex-direction: column;
		gap: 20px;
	}

	.cart-button {
		width: 250px;
		height: 40px;
		border-radius: 4px;
		background: #0078D4;
		color: #FFFFFF !important;
	}

	 .card-cart-button:hover {
        background: white;
        color: #0078D4;
        border-color: #0078D4;
    }

	.favorites-button {
		width: 250px;
		height: 40px;
		background: #FFFFFF;
		border: 1px solid #272727;
		border-radius: 4px;
	}

	.k-button-text {
		font-weight: 500 !important;
		font-size: 16px !important;
		line-height: 24px !important;
		text-align: center !important;
	}
</style>